{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["var $c1ce9d969bfa6909$exports = {};\n/*\n=================================================================\n VDoctor - Local Storage Authentication & Homepage Logic\n=================================================================\n This file handles all client-side logic for the VDoctor project.\n It uses the browser's localStorage for user authentication,\n removing the need for a backend service like Firebase for this feature.\n\n Features:\n - User Registration (stores user data locally)\n - User Login (checks credentials against local data)\n - Session Management (maintains login state across pages)\n - Dynamic Navbar (shows Login/Register or Logout)\n - Doctor Search/Filter\n - Testimonial Slider\n=================================================================\n*/ /**\n * Displays a message in a designated message container.\n * @param {string} message - The message to display.\n * @param {boolean} isError - True if the message is an error, false for success.\n */ const $c1ce9d969bfa6909$var$showMessage = (message, isError = false)=>{\n    const messageContainer = document.getElementById('message-container');\n    if (!messageContainer) return;\n    messageContainer.textContent = message;\n    messageContainer.className = 'message-container'; // Reset classes\n    if (isError) messageContainer.classList.add('error');\n    else messageContainer.classList.add('success');\n    messageContainer.style.display = 'block';\n};\n/**\n * Toggles the loading spinner visibility on a button.\n * @param {HTMLButtonElement} button - The button element.\n * @param {boolean} isLoading - True to show the spinner, false to hide it.\n */ const $c1ce9d969bfa6909$var$toggleLoading = (button, isLoading)=>{\n    if (!button) return;\n    const btnText = button.querySelector('.btn-text');\n    const spinner = button.querySelector('.spinner');\n    if (isLoading) {\n        btnText.style.display = 'none';\n        spinner.style.display = 'block';\n        button.disabled = true;\n    } else {\n        btnText.style.display = 'inline';\n        spinner.style.display = 'none';\n        button.disabled = false;\n    }\n};\n// --- AUTHENTICATION LOGIC ---\n// Handle Registration\nconst $c1ce9d969bfa6909$var$registerForm = document.getElementById('register-form');\nif ($c1ce9d969bfa6909$var$registerForm) $c1ce9d969bfa6909$var$registerForm.addEventListener('submit', (e)=>{\n    e.preventDefault();\n    const button = $c1ce9d969bfa6909$var$registerForm.querySelector('button[type=\"submit\"]');\n    $c1ce9d969bfa6909$var$toggleLoading(button, true);\n    const fullName = document.getElementById('fullName').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    // Get existing users from localStorage or initialize an empty array\n    const users = JSON.parse(localStorage.getItem('vdoctor_users')) || [];\n    // Check if user already exists\n    const userExists = users.some((user)=>user.email === email);\n    if (userExists) {\n        $c1ce9d969bfa6909$var$showMessage('An account with this email already exists.', true);\n        $c1ce9d969bfa6909$var$toggleLoading(button, false);\n    } else {\n        // Add new user\n        users.push({\n            fullName: fullName,\n            email: email,\n            password: password\n        });\n        localStorage.setItem('vdoctor_users', JSON.stringify(users));\n        $c1ce9d969bfa6909$var$showMessage('Registration successful! Redirecting to login...', false);\n        setTimeout(()=>window.location.href = 'login.html', 2000);\n    }\n});\n// Handle Login\nconst $c1ce9d969bfa6909$var$loginForm = document.getElementById('login-form');\nif ($c1ce9d969bfa6909$var$loginForm) $c1ce9d969bfa6909$var$loginForm.addEventListener('submit', (e)=>{\n    e.preventDefault();\n    const button = $c1ce9d969bfa6909$var$loginForm.querySelector('button[type=\"submit\"]');\n    $c1ce9d969bfa6909$var$toggleLoading(button, true);\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const users = JSON.parse(localStorage.getItem('vdoctor_users')) || [];\n    // Find user with matching credentials\n    const user = users.find((u)=>u.email === email && u.password === password);\n    if (user) {\n        // Store current user's info to simulate a session\n        localStorage.setItem('vdoctor_currentUser', JSON.stringify({\n            email: user.email,\n            fullName: user.fullName\n        }));\n        $c1ce9d969bfa6909$var$showMessage('Login successful! Redirecting...', false);\n        setTimeout(()=>window.location.href = 'index.html', 1500);\n    } else {\n        $c1ce9d969bfa6909$var$showMessage('Invalid email or password.', true);\n        $c1ce9d969bfa6909$var$toggleLoading(button, false);\n    }\n});\n/**\n * Checks auth state from localStorage and updates the navbar accordingly.\n */ const $c1ce9d969bfa6909$var$checkAuthState = ()=>{\n    const authLinksContainer = document.getElementById('auth-links');\n    if (!authLinksContainer) return;\n    const user = JSON.parse(localStorage.getItem('vdoctor_currentUser'));\n    if (user) {\n        // User is signed in\n        authLinksContainer.innerHTML = `\n            <button id=\"logout-btn\" class=\"btn btn-secondary nav-btn\">LOGOUT</button>\n        `;\n        const logoutBtn = document.getElementById('logout-btn');\n        logoutBtn?.addEventListener('click', async ()=>{\n            localStorage.removeItem('vdoctor_currentUser');\n            window.location.reload();\n        });\n    } else // User is signed out\n    authLinksContainer.innerHTML = `\n            <a href=\"login.html\" class=\"btn btn-secondary nav-btn\">LOGIN</a>\n            <a href=\"register.html\" class=\"btn btn-secondary nav-btn\">REGISTER</a>\n        `;\n};\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    // Always check the authentication state on any page that loads this script.\n    $c1ce9d969bfa6909$var$checkAuthState();\n    // Only run this logic on the homepage\n    if (document.getElementById('doctor-grid')) {\n        // Doctor Data\n        const doctors = [\n            {\n                name: 'Dr. Mehnaz',\n                specialization: 'Cardiologist',\n                location: 'Canada',\n                image: 'public/448fb44937b4973fffc5202effb13d3c91eae9c7@2x.png'\n            },\n            {\n                name: 'Dr. Aryan',\n                specialization: 'Dermatologist',\n                location: 'Kerala',\n                image: 'public/doctorsdaycuteyounghandsomemanlabcoatglasseswritingnotebook@2x.png'\n            },\n            {\n                name: 'Dr. Tarun',\n                specialization: 'Dentist',\n                location: 'India',\n                image: 'public/portraithansomeyoungmaledoctorman@2x.png'\n            },\n            {\n                name: 'Dr. Arun',\n                specialization: 'Neurology',\n                location: 'Kerala',\n                image: 'public/younghandsomephysicianmedicalrobewithstethoscope@2x.png'\n            }\n        ];\n        const doctorGrid = document.getElementById('doctor-grid');\n        const noResultsMessage = document.getElementById('no-results-message');\n        // Function to render doctors\n        const renderDoctors = (filteredDoctors)=>{\n            doctorGrid.innerHTML = '';\n            filteredDoctors.forEach((doc)=>{\n                const doctorCard = `\n                    <div class=\"doctor-card\">\n                        <img src=\"${doc.image}\" alt=\"${doc.name}\" class=\"doctor-image\">\n                        <div class=\"doctor-info\">\n                            <h3 class=\"doctor-name\">${doc.name}</h3>\n                            <p class=\"doctor-specialization\">${doc.specialization}</p>\n                            <p class=\"doctor-location\">${doc.location}</p>\n                        </div>\n                    </div>\n                `;\n                doctorGrid.innerHTML += doctorCard;\n            });\n            if (filteredDoctors.length === 0) noResultsMessage.style.display = 'block';\n            else noResultsMessage.style.display = 'none';\n        };\n        // Initial render\n        if (doctorGrid) renderDoctors(doctors);\n        // Search/Filter Logic\n        const searchForm = document.getElementById('doctor-search-form');\n        const specializationSearch = document.getElementById('specialization-search');\n        const locationSearch = document.getElementById('location-search');\n        const filterDoctors = (e)=>{\n            e.preventDefault(); // Prevent form submission\n            const specQuery = specializationSearch.value.toLowerCase();\n            const locQuery = locationSearch.value.toLowerCase();\n            const filtered = doctors.filter((doc)=>{\n                // If query is empty, it's a match. Otherwise, check for inclusion.\n                const matchesSpec = specQuery === '' || doc.specialization.toLowerCase().includes(specQuery);\n                const matchesLoc = locQuery === '' || doc.location.toLowerCase().includes(locQuery);\n                return matchesSpec && matchesLoc;\n            });\n            renderDoctors(filtered);\n        };\n        if (searchForm) {\n            searchForm.addEventListener('submit', filterDoctors);\n            // Also filter on change for a more interactive feel\n            specializationSearch.addEventListener('change', (e)=>filterDoctors(e));\n            locationSearch.addEventListener('change', (e)=>filterDoctors(e));\n        }\n        // Testimonial Slider Logic\n        const testimonials = [\n            {\n                quote: \"VDoctor made booking a consultation so easy. The virtual consultation saved me so much time!\",\n                author: \"Jennifer Robinson, LELEANDM USA\",\n                image: \"public/portraithansomeyoungmaledoctorman@2x.png\"\n            },\n            {\n                quote: \"The doctors are highly professional and caring. I had a wonderful experience and would highly recommend this platform.\",\n                author: \"John Doe, HealthFirst UK\",\n                image: \"public/younghandsomephysicianmedicalrobewithstethoscope@2x.png\"\n            },\n            {\n                quote: \"A seamless and efficient way to get medical advice. The platform is user-friendly and the service is top-notch.\",\n                author: \"Priya Sharma, MediConnect India\",\n                image: \"public/doctorsdaycuteyounghandsomemanlabcoatglasseswritingnotebook@2x.png\"\n            }\n        ];\n        const sliderContainer = document.querySelector('.testimonial-card-container');\n        const nextBtn = document.querySelector('.next-btn');\n        const prevBtn = document.querySelector('.prev-btn');\n        let currentSlide = 0;\n        const renderTestimonials = ()=>{\n            if (!sliderContainer) return;\n            sliderContainer.innerHTML = '';\n            testimonials.forEach((t, index)=>{\n                const card = document.createElement('div');\n                card.classList.add('testimonial-card');\n                if (index === currentSlide) card.classList.add('active');\n                card.innerHTML = `\n                    <div class=\"testimonial-profile\">\n                        <img src=\"${t.image}\" alt=\"${t.author}\" class=\"testimonial-avatar\">\n                        <div class=\"testimonial-info\">\n                            <p class=\"testimonial-quote\">\"${t.quote}\"</p>\n                            <p class=\"testimonial-author\">- ${t.author}</p>\n                        </div>\n                    </div>\n                `;\n                sliderContainer.appendChild(card);\n            });\n        };\n        const showSlide = (index)=>{\n            const slides = document.querySelectorAll('.testimonial-card');\n            if (index >= slides.length) currentSlide = 0;\n            else if (index < 0) currentSlide = slides.length - 1;\n            else currentSlide = index;\n            slides.forEach((slide)=>slide.classList.remove('active'));\n            slides[currentSlide].classList.add('active');\n        };\n        if (nextBtn && prevBtn) {\n            renderTestimonials(); // Initial render\n            nextBtn.addEventListener('click', ()=>{\n                showSlide(currentSlide + 1);\n            });\n            prevBtn.addEventListener('click', ()=>{\n                showSlide(currentSlide - 1);\n            });\n        }\n    }\n});\n\n\n//# sourceMappingURL=index.9d1ffe7d.js.map\n","/*\n=================================================================\n VDoctor - Local Storage Authentication & Homepage Logic\n=================================================================\n This file handles all client-side logic for the VDoctor project.\n It uses the browser's localStorage for user authentication,\n removing the need for a backend service like Firebase for this feature.\n\n Features:\n - User Registration (stores user data locally)\n - User Login (checks credentials against local data)\n - Session Management (maintains login state across pages)\n - Dynamic Navbar (shows Login/Register or Logout)\n - Doctor Search/Filter\n - Testimonial Slider\n=================================================================\n*/\n\n/**\n * Displays a message in a designated message container.\n * @param {string} message - The message to display.\n * @param {boolean} isError - True if the message is an error, false for success.\n */\nconst showMessage = (message, isError = false) => {\n    const messageContainer = document.getElementById('message-container');\n    if (!messageContainer) return;\n\n    messageContainer.textContent = message;\n    messageContainer.className = 'message-container'; // Reset classes\n    if (isError) {\n        messageContainer.classList.add('error');\n    } else {\n        messageContainer.classList.add('success');\n    }\n    messageContainer.style.display = 'block';\n};\n\n/**\n * Toggles the loading spinner visibility on a button.\n * @param {HTMLButtonElement} button - The button element.\n * @param {boolean} isLoading - True to show the spinner, false to hide it.\n */\nconst toggleLoading = (button, isLoading) => {\n    if (!button) return;\n    const btnText = button.querySelector('.btn-text');\n    const spinner = button.querySelector('.spinner');\n\n    if (isLoading) {\n        btnText.style.display = 'none';\n        spinner.style.display = 'block';\n        button.disabled = true;\n    } else {\n        btnText.style.display = 'inline';\n        spinner.style.display = 'none';\n        button.disabled = false;\n    }\n};\n\n// --- AUTHENTICATION LOGIC ---\n\n// Handle Registration\nconst registerForm = document.getElementById('register-form');\nif (registerForm) {    \n    registerForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const button = registerForm.querySelector('button[type=\"submit\"]');\n        toggleLoading(button, true);\n\n        const fullName = document.getElementById('fullName').value;\n        const email = document.getElementById('email').value;\n        const password = document.getElementById('password').value;\n        \n        // Get existing users from localStorage or initialize an empty array\n        const users = JSON.parse(localStorage.getItem('vdoctor_users')) || [];\n\n        // Check if user already exists\n        const userExists = users.some(user => user.email === email);\n\n        if (userExists) {\n            showMessage('An account with this email already exists.', true);\n            toggleLoading(button, false);\n        } else {\n            // Add new user\n            users.push({ fullName, email, password });\n            localStorage.setItem('vdoctor_users', JSON.stringify(users));\n            \n            showMessage('Registration successful! Redirecting to login...', false);\n            setTimeout(() => window.location.href = 'login.html', 2000);\n        }\n    });\n}\n\n// Handle Login\nconst loginForm = document.getElementById('login-form');\nif (loginForm) {    \n    loginForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const button = loginForm.querySelector('button[type=\"submit\"]');\n        toggleLoading(button, true);\n\n        const email = document.getElementById('email').value;\n        const password = document.getElementById('password').value;\n        \n        const users = JSON.parse(localStorage.getItem('vdoctor_users')) || [];\n        \n        // Find user with matching credentials\n        const user = users.find(u => u.email === email && u.password === password);\n\n        if (user) {\n            // Store current user's info to simulate a session\n            localStorage.setItem('vdoctor_currentUser', JSON.stringify({ email: user.email, fullName: user.fullName }));\n            showMessage('Login successful! Redirecting...', false);\n            setTimeout(() => window.location.href = 'index.html', 1500);\n        } else {\n            showMessage('Invalid email or password.', true);\n            toggleLoading(button, false);\n        }\n    });\n}\n\n/**\n * Checks auth state from localStorage and updates the navbar accordingly.\n */\nconst checkAuthState = () => {\n    const authLinksContainer = document.getElementById('auth-links');\n    if (!authLinksContainer) return;\n\n    const user = JSON.parse(localStorage.getItem('vdoctor_currentUser'));\n\n    if (user) {\n        // User is signed in\n        authLinksContainer.innerHTML = `\n            <button id=\"logout-btn\" class=\"btn btn-secondary nav-btn\">LOGOUT</button>\n        `;\n        const logoutBtn = document.getElementById('logout-btn');\n        logoutBtn?.addEventListener('click', async () => {\n            localStorage.removeItem('vdoctor_currentUser');\n            window.location.reload();\n        });\n    } else {\n        // User is signed out\n        authLinksContainer.innerHTML = `\n            <a href=\"login.html\" class=\"btn btn-secondary nav-btn\">LOGIN</a>\n            <a href=\"register.html\" class=\"btn btn-secondary nav-btn\">REGISTER</a>\n        `;\n    }\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Always check the authentication state on any page that loads this script.\n    checkAuthState();\n\n    // Only run this logic on the homepage\n    if (document.getElementById('doctor-grid')) {\n        // Doctor Data\n        const doctors = [{\n                name: 'Dr. Mehnaz',\n                specialization: 'Cardiologist',\n                location: 'Canada',\n                image: 'public/448fb44937b4973fffc5202effb13d3c91eae9c7@2x.png'\n            },\n            {\n                name: 'Dr. Aryan',\n                specialization: 'Dermatologist',\n                location: 'Kerala',\n                image: 'public/doctorsdaycuteyounghandsomemanlabcoatglasseswritingnotebook@2x.png'\n            },\n            {\n                name: 'Dr. Tarun',\n                specialization: 'Dentist',\n                location: 'India',\n                image: 'public/portraithansomeyoungmaledoctorman@2x.png'\n            },\n            {\n                name: 'Dr. Arun',\n                specialization: 'Neurology',\n                location: 'Kerala',\n                image: 'public/younghandsomephysicianmedicalrobewithstethoscope@2x.png'\n            },\n        ];\n\n        const doctorGrid = document.getElementById('doctor-grid');\n        const noResultsMessage = document.getElementById('no-results-message');\n\n        // Function to render doctors\n        const renderDoctors = (filteredDoctors) => {\n            doctorGrid.innerHTML = '';\n            filteredDoctors.forEach(doc => {\n                const doctorCard = `\n                    <div class=\"doctor-card\">\n                        <img src=\"${doc.image}\" alt=\"${doc.name}\" class=\"doctor-image\">\n                        <div class=\"doctor-info\">\n                            <h3 class=\"doctor-name\">${doc.name}</h3>\n                            <p class=\"doctor-specialization\">${doc.specialization}</p>\n                            <p class=\"doctor-location\">${doc.location}</p>\n                        </div>\n                    </div>\n                `;\n                doctorGrid.innerHTML += doctorCard;\n            });\n\n            if (filteredDoctors.length === 0) {\n                noResultsMessage.style.display = 'block';\n            } else {\n                noResultsMessage.style.display = 'none';\n            }\n        };\n\n        // Initial render\n        if (doctorGrid) {\n            renderDoctors(doctors);\n        }\n\n        // Search/Filter Logic\n        const searchForm = document.getElementById('doctor-search-form');\n        const specializationSearch = document.getElementById('specialization-search');\n        const locationSearch = document.getElementById('location-search');\n\n        const filterDoctors = (e) => {\n            e.preventDefault(); // Prevent form submission\n            const specQuery = specializationSearch.value.toLowerCase();\n            const locQuery = locationSearch.value.toLowerCase();\n\n            const filtered = doctors.filter(doc => {\n                // If query is empty, it's a match. Otherwise, check for inclusion.\n                const matchesSpec = specQuery === '' || doc.specialization.toLowerCase().includes(specQuery);\n                const matchesLoc = locQuery === '' || doc.location.toLowerCase().includes(locQuery);\n                return matchesSpec && matchesLoc;\n            });\n            renderDoctors(filtered);\n        };\n\n        if (searchForm) {\n            searchForm.addEventListener('submit', filterDoctors);\n            // Also filter on change for a more interactive feel\n            specializationSearch.addEventListener('change', (e) => filterDoctors(e));\n            locationSearch.addEventListener('change', (e) => filterDoctors(e));\n        }\n\n        // Testimonial Slider Logic\n        const testimonials = [{\n                quote: \"VDoctor made booking a consultation so easy. The virtual consultation saved me so much time!\",\n                author: \"Jennifer Robinson, LELEANDM USA\",\n                image: \"public/portraithansomeyoungmaledoctorman@2x.png\"\n            },\n            {\n                quote: \"The doctors are highly professional and caring. I had a wonderful experience and would highly recommend this platform.\",\n                author: \"John Doe, HealthFirst UK\",\n                image: \"public/younghandsomephysicianmedicalrobewithstethoscope@2x.png\"\n            },\n            {\n                quote: \"A seamless and efficient way to get medical advice. The platform is user-friendly and the service is top-notch.\",\n                author: \"Priya Sharma, MediConnect India\",\n                image: \"public/doctorsdaycuteyounghandsomemanlabcoatglasseswritingnotebook@2x.png\"\n            }\n        ];\n\n        const sliderContainer = document.querySelector('.testimonial-card-container');\n        const nextBtn = document.querySelector('.next-btn');\n        const prevBtn = document.querySelector('.prev-btn');\n        let currentSlide = 0;\n\n        const renderTestimonials = () => {\n            if (!sliderContainer) return;\n            sliderContainer.innerHTML = '';\n            testimonials.forEach((t, index) => {\n                const card = document.createElement('div');\n                card.classList.add('testimonial-card');\n                if (index === currentSlide) {\n                    card.classList.add('active');\n                }\n                card.innerHTML = `\n                    <div class=\"testimonial-profile\">\n                        <img src=\"${t.image}\" alt=\"${t.author}\" class=\"testimonial-avatar\">\n                        <div class=\"testimonial-info\">\n                            <p class=\"testimonial-quote\">\"${t.quote}\"</p>\n                            <p class=\"testimonial-author\">- ${t.author}</p>\n                        </div>\n                    </div>\n                `;\n                sliderContainer.appendChild(card);\n            });\n        };\n\n        const showSlide = (index) => {\n            const slides = document.querySelectorAll('.testimonial-card');\n            if (index >= slides.length) {\n                currentSlide = 0;\n            } else if (index < 0) {\n                currentSlide = slides.length - 1;\n            } else {\n                currentSlide = index;\n            }\n            slides.forEach(slide => slide.classList.remove('active'));\n            slides[currentSlide].classList.add('active');\n        };\n\n        if (nextBtn && prevBtn) {\n            renderTestimonials(); // Initial render\n\n            nextBtn.addEventListener('click', () => {\n                showSlide(currentSlide + 1);\n            });\n\n            prevBtn.addEventListener('click', () => {\n                showSlide(currentSlide - 1);\n            });\n        }\n    }\n});\n"],"names":["$c1ce9d969bfa6909$var$showMessage","message","isError","messageContainer","document","getElementById","textContent","className","classList","add","style","display","$c1ce9d969bfa6909$var$toggleLoading","button","isLoading","btnText","querySelector","spinner","disabled","$c1ce9d969bfa6909$var$registerForm","addEventListener","e","preventDefault","fullName","value","email","password","users","JSON","parse","localStorage","getItem","some","user","push","setItem","stringify","setTimeout","window","location","href","$c1ce9d969bfa6909$var$loginForm","find","u","$c1ce9d969bfa6909$var$checkAuthState","authLinksContainer","innerHTML","logoutBtn","removeItem","reload","doctors","name","specialization","image","doctorGrid","noResultsMessage","renderDoctors","filteredDoctors","forEach","doc","doctorCard","length","searchForm","specializationSearch","locationSearch","filterDoctors","specQuery","toLowerCase","locQuery","filter","matchesSpec","includes","matchesLoc","sliderContainer","nextBtn","prevBtn","currentSlide","showSlide","index","slides","querySelectorAll","slide","remove","testimonials","quote","author","t","card","createElement","appendChild"],"version":3,"file":"index.9d1ffe7d.js.map"}